{"/home/travis/build/npmtest/node-npmtest-redux-loop/test.js":"/* istanbul instrument in package npmtest_redux_loop */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-redux-loop/lib.npmtest_redux_loop.js":"/* istanbul instrument in package npmtest_redux_loop */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_redux_loop = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_redux_loop = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-redux-loop/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-redux-loop && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_redux_loop */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_redux_loop\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_redux_loop.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_redux_loop.rollup.js'] =\n            local.assetsDict['/assets.npmtest_redux_loop.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_redux_loop.__dirname + '/lib.npmtest_redux_loop.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-redux-loop/node_modules/redux-loop/lib/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getEffect = exports.getModel = exports.liftState = exports.isLoop = exports.loop = exports.install = exports.Effects = exports.combineReducers = undefined;\n\nvar _loop = require('./loop');\n\nvar _effects = require('./effects');\n\nvar _install = require('./install');\n\nvar _combineReducers = require('./combineReducers');\n\nvar Effects = {\n  constant: _effects.constant,\n  promise: _effects.promise,\n  call: _effects.call,\n  batch: _effects.batch,\n  none: _effects.none,\n  lift: _effects.lift\n};\n\nexports.combineReducers = _combineReducers.combineReducers;\nexports.Effects = Effects;\nexports.install = _install.install;\nexports.loop = _loop.loop;\nexports.isLoop = _loop.isLoop;\nexports.liftState = _loop.liftState;\nexports.getModel = _loop.getModel;\nexports.getEffect = _loop.getEffect;","/home/travis/build/npmtest/node-npmtest-redux-loop/node_modules/redux-loop/lib/loop.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.liftState = exports.loop = exports.getModel = exports.getEffect = exports.isLoop = undefined;\n\nvar _utils = require('./utils');\n\nvar _effects = require('./effects');\n\n/**\n * Determines if the object is an array created via `loop()`.\n */\nvar isLoop = exports.isLoop = function isLoop(array) {\n  return Array.isArray(array) && array.length === 2 && (0, _effects.isEffect)(array[1]);\n};\n\n/**\n * Returns the effect from the loop if it is a loop, otherwise null\n */\nvar getEffect = exports.getEffect = function getEffect(loop) {\n  if (!isLoop(loop)) {\n    return null;\n  }\n\n  return loop[1];\n};\n\n/**\n * Returns the model from the loop if it is a loop, otherwise identity\n */\nvar getModel = exports.getModel = function getModel(loop) {\n  if (!isLoop(loop)) {\n    return loop;\n  }\n\n  return loop[0];\n};\n\n/**\n * Attaches an effect to the model.\n *\n *   function reducerWithSingleEffect(state, action) {\n *     // ...\n *     return loop(\n *       newState,\n *       fetchSomeStuff() // returns a promise\n *     );\n *   }\n *\n *   function reducerWithManyEffectsOneAsyncOneNot(state, action) {\n *     // ...\n *     return loop(\n *       newState,\n *       Promise.all([\n *         fetchSomeStuff(),\n *         Promise.resolve(someActionCreator())\n *       ])\n *     );\n *   }\n */\nvar loop = exports.loop = function loop(model, effect) {\n  if (process.env.NODE_ENV === 'development') {\n    (0, _utils.throwInvariant)((0, _effects.isEffect)(effect), 'Given effect is not an effect instance.');\n  }\n\n  return [model, effect];\n};\n\n/**\n* Lifts a state to a looped state if it is not already.\n*/\nvar liftState = exports.liftState = function liftState(state) {\n  return isLoop(state) ? state : loop(state, (0, _effects.none)());\n};","/home/travis/build/npmtest/node-npmtest-redux-loop/node_modules/redux-loop/lib/utils.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.flatten = flatten;\nexports.throwInvariant = throwInvariant;\nexports.mapValues = mapValues;\nvar concat = Array.prototype.concat;\n\n/**\n * Flattens an array one level\n */\nfunction flatten(array) {\n  return concat.apply([], array);\n}\n\n/**\n * Throws with message if condition is false.\n * @param {Boolean} condition The condition to assert.\n * @param {String} message The message of the error to throw.\n */\nfunction throwInvariant(condition, message) {\n  if (!condition) {\n    throw Error(message);\n  }\n}\n\n/**\n * Maps over each value in an object and creates a new object with the mapped\n * values assigned to each key.\n * @param {Object} object The source object.\n * @param {Function} mapper The mapper function that receives the value and the key.\n * @returns {Object} A new object that contains the mapped values for the keys.\n */\nfunction mapValues(object, mapper) {\n  return Object.keys(object).reduce(function (current, key) {\n    current[key] = mapper(object[key], key);\n    return current;\n  }, {});\n}","/home/travis/build/npmtest/node-npmtest-redux-loop/node_modules/redux-loop/lib/effects.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.effectToPromise = effectToPromise;\nexports.isEffect = isEffect;\nexports.isNone = isNone;\nexports.none = none;\nexports.promise = promise;\nexports.call = call;\nexports.batch = batch;\nexports.constant = constant;\nexports.lift = lift;\n\nvar _utils = require('./utils');\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar isEffectSymbol = Symbol('isEffect');\n\nvar effectTypes = {\n  PROMISE: 'PROMISE',\n  CALL: 'CALL',\n  BATCH: 'BATCH',\n  CONSTANT: 'CONSTANT',\n  NONE: 'NONE',\n  LIFT: 'LIFT'\n};\n\n/**\n* Runs an effect and returns the Promise for its completion.\n* @param {Object} effect The effect to convert to a Promise.\n* @returns {Promise} The converted effect Promise.\n*/\nfunction effectToPromise(effect) {\n  if (process.env.NODE_ENV === 'development') {\n    (0, _utils.throwInvariant)(isEffect(effect), 'Given effect is not an effect instance.');\n  }\n\n  switch (effect.type) {\n    case effectTypes.PROMISE:\n      return effect.factory.apply(effect, _toConsumableArray(effect.args)).then(function (action) {\n        return [action];\n      });\n    case effectTypes.CALL:\n      return Promise.resolve([effect.factory.apply(effect, _toConsumableArray(effect.args))]);\n    case effectTypes.BATCH:\n      return Promise.all(effect.effects.map(effectToPromise)).then(_utils.flatten);\n    case effectTypes.CONSTANT:\n      return Promise.resolve([effect.action]);\n    case effectTypes.NONE:\n      return Promise.resolve([]);\n    case effectTypes.LIFT:\n      return effectToPromise(effect.effect).then(function (actions) {\n        return actions.map(function (action) {\n          return effect.factory.apply(effect, _toConsumableArray(effect.args).concat([action]));\n        });\n      });\n  }\n}\n\n/**\n * Determines if the object was created with an effect creator.\n * @param {Object} object The object to inspect.\n * @returns {Boolean} Whether the object is an effect.\n */\nfunction isEffect(object) {\n  return object ? object[isEffectSymbol] : false;\n}\n\n/**\n * Determines id the effect object is of type none\n * @param {Object} The object to inspect.\n * @returns {Boolean} Whether the object is a none effect.\n */\nfunction isNone(object) {\n  return object ? object.type === effectTypes.NONE : false;\n}\n\n/**\n * Creates a noop effect.\n * @returns {Object} An effect of type NONE, essentially a no-op.\n */\nfunction none() {\n  return _defineProperty({\n    type: effectTypes.NONE\n  }, isEffectSymbol, true);\n}\n\n/**\n * Creates an effect for a function that returns a Promise.\n * @param {Function} factory The function to invoke with the given args that returns a Promise for an action.\n * @returns {Object} The wrapped effect of type PROMISE.\n */\nfunction promise(factory) {\n  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  return _defineProperty({\n    factory: factory,\n    args: args,\n    type: effectTypes.PROMISE\n  }, isEffectSymbol, true);\n}\n\n/**\n * Creates an effect for a function that returns an action.\n * @param {Function} factory The function to invoke with the given args that returns an action.\n * @returns {Object} The wrapped effect of type CALL.\n */\nfunction call(factory) {\n  for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n\n  return _defineProperty({\n    factory: factory,\n    args: args,\n    type: effectTypes.CALL\n  }, isEffectSymbol, true);\n}\n\n/**\n * Composes an array of effects together.\n */\nfunction batch(effects) {\n  return _defineProperty({\n    effects: effects,\n    type: effectTypes.BATCH\n  }, isEffectSymbol, true);\n}\n\n/**\n * Creates an effect for an already-available action.\n */\nfunction constant(action) {\n  return _defineProperty({\n    action: action,\n    type: effectTypes.CONSTANT\n  }, isEffectSymbol, true);\n}\n\n/**\n * Transform the return type of a bunch of `Effects`. This is primarily useful for adding tags to route `Actions` to the right place\n */\nfunction lift(effect, factory) {\n  for (var _len3 = arguments.length, args = Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n    args[_key3 - 2] = arguments[_key3];\n  }\n\n  return _defineProperty({\n    effect: effect,\n    factory: factory,\n    args: args,\n    type: effectTypes.LIFT\n  }, isEffectSymbol, true);\n}","/home/travis/build/npmtest/node-npmtest-redux-loop/node_modules/redux-loop/lib/install.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nexports.install = install;\n\nvar _utils = require('./utils');\n\nvar _errors = require('./errors');\n\nvar _loop = require('./loop');\n\nvar _effects = require('./effects');\n\n/**\n * Installs a new dispatch function which will attempt to execute any effects\n * attached to the current model as established by the original dispatch.\n */\nfunction install() {\n  return function (next) {\n    return function (reducer, initialState, enhancer) {\n      var currentEffect = (0, _effects.none)();\n\n      var _liftState = (0, _loop.liftState)(initialState);\n\n      var _liftState2 = _slicedToArray(_liftState, 2);\n\n      var initialModel = _liftState2[0];\n      var initialEffect = _liftState2[1];\n\n\n      var liftReducer = function liftReducer(reducer) {\n        return function (state, action) {\n          var result = reducer(state, action);\n\n          var _liftState3 = (0, _loop.liftState)(result);\n\n          var _liftState4 = _slicedToArray(_liftState3, 2);\n\n          var model = _liftState4[0];\n          var effect = _liftState4[1];\n\n          if ((0, _effects.isNone)(currentEffect)) {\n            currentEffect = effect;\n          } else {\n            currentEffect = (0, _effects.batch)([currentEffect, effect]);\n          }\n          return model;\n        };\n      };\n\n      var store = next(liftReducer(reducer), initialModel, enhancer);\n\n      var runEffect = function runEffect(originalAction, effect) {\n        return (0, _effects.effectToPromise)(effect).then(function (actions) {\n          return Promise.all(actions.map(dispatch));\n        })['catch'](function (error) {\n          console.error((0, _errors.loopPromiseCaughtError)(originalAction.type));\n          throw error;\n        });\n      };\n\n      var dispatch = function dispatch(action) {\n        store.dispatch(action);\n        var effectToRun = currentEffect;\n        currentEffect = (0, _effects.none)();\n        return runEffect(action, effectToRun);\n      };\n\n      var replaceReducer = function replaceReducer(reducer) {\n        return store.replaceReducer(liftReducer(reducer));\n      };\n\n      runEffect({ type: '@@ReduxLoop/INIT' }, initialEffect);\n\n      return _extends({}, store, {\n        dispatch: dispatch,\n        replaceReducer: replaceReducer\n      });\n    };\n  };\n}","/home/travis/build/npmtest/node-npmtest-redux-loop/node_modules/redux-loop/lib/errors.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar loopPromiseCaughtError = exports.loopPromiseCaughtError = function loopPromiseCaughtError(originalActionType) {\n  return \"\\nloop Promise caught when returned from action of type \" + originalActionType + \".\\nloop Promises must not throw!\\n\\nDid you forget to do one of the following?\\n\\n- Call `.catch` on a Promise in a function passed to `Effects.promise`\\n\\n  const asyncEffect = (val) => {\\n    return api.doStuff(val)\\n      .then((stuff) => Actions.success(stuff))\\n      .catch((error) => Actions.failure(error)); // <-- You have to do this!\\n  };\\n\\n- Return an action from a `.catch` callback\\n\\n  const asyncEffect = (val) => {\\n    return api.doStuff(val)\\n      .then((stuff) => {\\n        return Actions.success(stuff); // <-- Make sure to return here!\\n      })\\n      .catch((error) => {\\n        return Actions.failure(error): // <-- And return here!\\n      });\\n  };\\n\\nDon't see the problem here? Please report the issue at <https://github.com/raisemarketplace/redux-loop/issues/new>\\n\";\n};","/home/travis/build/npmtest/node-npmtest-redux-loop/node_modules/redux-loop/lib/combineReducers.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.combineReducers = combineReducers;\n\nvar _loop = require('./loop');\n\nvar _effects = require('./effects');\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction optimizeBatch(effects) {\n  switch (effects.length) {\n    case 0:\n      return (0, _effects.none)();\n    case 1:\n      return effects[0];\n    default:\n      return (0, _effects.batch)(effects);\n  }\n}\n\nvar defaultAccessor = function defaultAccessor(state, key) {\n  return state[key];\n};\n\nvar defaultMutator = function defaultMutator(state, key, value) {\n  return _extends({}, state, _defineProperty({}, key, value));\n};\n\nfunction combineReducers(reducerMap) {\n  var rootState = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n  var accessor = arguments.length <= 2 || arguments[2] === undefined ? defaultAccessor : arguments[2];\n  var mutator = arguments.length <= 3 || arguments[3] === undefined ? defaultMutator : arguments[3];\n\n  return function finalReducer() {\n    var state = arguments.length <= 0 || arguments[0] === undefined ? rootState : arguments[0];\n    var action = arguments[1];\n\n    var hasChanged = false;\n    var effects = [];\n\n    var model = Object.keys(reducerMap).reduce(function (model, key) {\n      var reducer = reducerMap[key];\n      var previousStateForKey = accessor(state, key);\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if ((0, _loop.isLoop)(nextStateForKey)) {\n        effects.push((0, _loop.getEffect)(nextStateForKey));\n        nextStateForKey = (0, _loop.getModel)(nextStateForKey);\n      }\n\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n      return mutator(model, key, nextStateForKey);\n    }, rootState);\n\n    return (0, _loop.loop)(hasChanged ? model : state, optimizeBatch(effects));\n  };\n}","/home/travis/build/npmtest/node-npmtest-redux-loop/node_modules/redux-loop/modules/index.js":"import {\n  loop,\n  liftState,\n  getModel,\n  getEffect,\n  isLoop\n} from './loop';\n\nimport {\n  batch,\n  none,\n  constant,\n  promise,\n  call,\n  lift,\n} from './effects';\n\nimport {\n  install,\n} from './install';\n\nimport {\n  combineReducers,\n} from './combineReducers';\n\n\nconst Effects = {\n  constant,\n  promise,\n  call,\n  batch,\n  none,\n  lift,\n};\n\nexport {\n  combineReducers,\n  Effects,\n  install,\n  loop,\n  isLoop,\n  liftState,\n  getModel,\n  getEffect,\n};\n"}